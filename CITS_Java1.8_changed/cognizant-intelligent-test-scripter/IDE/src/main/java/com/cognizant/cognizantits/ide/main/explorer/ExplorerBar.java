/*
 * Copyright 2014 - 2017 Cognizant Technology Solutions
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.cognizant.cognizantits.ide.main.explorer;

import com.cognizant.cognizantits.datalib.component.TestCase;
import com.cognizant.cognizantits.ide.main.explorer.settings.Settings;
import com.cognizant.cognizantits.ide.main.mainui.AppMainFrame;
import com.cognizant.cognizantits.ide.util.Canvas;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * 
 */
public class ExplorerBar extends javax.swing.JFrame {

    /**
     * Creates new form ExplorerBar
     */
    private final ExplorerController controller;
    private static ExplorerBar expBar;
    public static int barHeight = 43;
    public JButton selected = new JButton();
    private static ImageIcon icon;

    AppMainFrame sMainFrame;

    public TestCase testCase;

    public static void showExplorerBar(AppMainFrame sMainFrame) {
        if (expBar == null) {
            expBar = new ExplorerBar(sMainFrame);
        }
        //sets up the location to save screenshot
        Settings.setScreenShotLoc(sMainFrame.getProject().getLocation() + File.separator + "Explorer");
        expBar.init();
        expBar.setVisible(true);
        sMainFrame.setVisible(false);
    }

    private void init() {
        controller.cropControl.setFrame(this);
        setSize(getSize());
        /**
         * disable the right click disarm functionality
         */
        controller.cropControl.setRightClickDisArm(false);
        sMainFrame.getProject().addScenario("ExploratoryScenario");

        SimpleDateFormat sdf = new SimpleDateFormat("MMM_dd_yy_k_m_s");

        testCase = sMainFrame.getProject()
                .getScenarioByName("ExploratoryScenario")
                .addTestCase("New TestCase_" + sdf.format(new Date()));
        sMainFrame.getTestDesign().getTestCaseComp().loadTableModelForSelection(testCase);
    }

    public ExplorerBar(AppMainFrame sMainFrame) {
        this.sMainFrame = sMainFrame;
        icon = new ImageIcon(getClass().getResource("/explorer/explorer.png"));
        initComponents();
        addBtn.setVisible(false);
        done.setVisible(false);
        this.setLocation(Canvas.Window.winStart);
        this.setAlwaysOnTop(true);
        controller = new ExplorerController(this) {
            @Override
            public void setWindows(boolean visible) {
                selected.setSelected(visible);
            }
        };
        setIconImage(icon.getImage());
    }

    @Override
    public Dimension getSize() {
        return new Dimension(Canvas.Window.W, barHeight);
    }

    @Override
    public int getX() {
        return 0;
    }

    @Override
    public int getY() {
        return super.getY();
    }

    @Override
    public Point getLocation() {
        return super.getLocation();
    }

    void reset() {
        recordBtn.setSelected(false);
        selected.setSelected(false);
    }

    /**
     * dispose and close the explorer bar UI
     */
    void closeExplorer() {
        reset();
        if (testCase != null
                && !testCase.getTestSteps().isEmpty()) {
            int option = JOptionPane.showConfirmDialog(
                    null, "Do you want to save the flow?");
            if (option == JOptionPane.YES_OPTION) {
                sMainFrame.getTestDesign().getProjectTree()
                        .getTreeModel().addTestCase(testCase);
            } else {
                testCase.getScenario().removeTestCase(testCase);
            }
        }
        testCase = null;
        controller.close();
        sMainFrame.setVisible(true);
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton8 = new javax.swing.JButton();
        done = new javax.swing.JButton();
        bar = new javax.swing.JPanel();
        toolbarEast = new javax.swing.JToolBar();
        addBtn = new javax.swing.JButton();
        settingsBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        toolbarWest = new javax.swing.JToolBar();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        snapscreenBtn = new javax.swing.JButton(){

        };
        jSeparator4 = new javax.swing.JToolBar.Separator();
        cropscreenBtn = new javax.swing.JButton(){
            @Override
            public void setSelected(boolean sel) {
                setForeground(sel?Color.blue:Color.black);
                super.setSelected(sel);
                addBtn.setVisible(sel);
                done.setVisible(sel);
                if(!sel && controller!=null) {
                    controller.doneCrop(null);
                }
            }
        };
        jSeparator2 = new javax.swing.JToolBar.Separator();
        screenshotsBtn = new javax.swing.JButton(){
            @Override
            public void setSelected(boolean sel)    {
                setForeground(sel?Color.blue:Color.black);
                super.setSelected(sel);
                if(!sel && controller!=null)  {
                    controller.hideBase();
                }
            }
        };
        jSeparator8 = new javax.swing.JToolBar.Separator();
        recordBtn = new javax.swing.JButton(){
            @Override
            public void setSelected(boolean sel){
                setForeground(sel?Color.blue:Color.black);
                super.setSelected(sel);
                if (sel) {
                    sMainFrame.getSpyHealReco().startRecorder();
                } else {
                    sMainFrame.getSpyHealReco().stopRecorder();
                }
            }
        };
        jSeparator5 = new javax.swing.JToolBar.Separator();
        teststepsBtn = new javax.swing.JButton(){
            @Override
            public void setSelected(boolean sel)    {
                setForeground(sel?Color.blue:Color.black);
                super.setSelected(sel);
                if(!sel && controller!=null)        {
                    controller.hideBase();
                }}
            };
            jSeparator3 = new javax.swing.JToolBar.Separator();
            exportBtn = new javax.swing.JButton(){
                @Override
                public void setSelected(boolean sel){
                    super.setSelected(sel);
                }
            };
            jSeparator6 = new javax.swing.JToolBar.Separator();
            bugBtn = new javax.swing.JButton(){
                @Override
                public void setSelected(boolean sel){
                    setForeground(sel?Color.blue:Color.black);
                    super.setSelected(sel);
                    if(!sel && controller!=null) {
                        controller.hideBase();
                    }

                }
            };
            jSeparator7 = new javax.swing.JToolBar.Separator();

            jButton8.setText("jButton8");

            done.setIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/done.png"))); // NOI18N
            done.setText("Done");
            done.setContentAreaFilled(false);
            done.setFocusPainted(false);
            done.setFocusable(false);
            done.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/selected_done.png"))); // NOI18N
            done.setVerticalAlignment(javax.swing.SwingConstants.TOP);
            done.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    doneActionPerformed(evt);
                }
            });

            setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
            setTitle("Explorer");
            setUndecorated(true);
            setSize(new java.awt.Dimension(0, 0));
            addWindowListener(new java.awt.event.WindowAdapter() {
                public void windowClosing(java.awt.event.WindowEvent evt) {
                    formWindowClosing(evt);
                }
            });

            bar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
            bar.setLayout(new java.awt.BorderLayout());

            toolbarEast.setFloatable(false);
            toolbarEast.setRollover(true);
            toolbarEast.setBorderPainted(false);

            addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/add.png"))); // NOI18N
            addBtn.setText("Add Image");
            addBtn.setContentAreaFilled(false);
            addBtn.setFocusPainted(false);
            addBtn.setFocusable(false);
            addBtn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/selected_add.png"))); // NOI18N
            addBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
            addBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    addBtnActionPerformed(evt);
                }
            });
            toolbarEast.add(addBtn);

            settingsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/exploreSettings.png"))); // NOI18N
            settingsBtn.setText("Settings");
            settingsBtn.setContentAreaFilled(false);
            settingsBtn.setFocusable(false);
            settingsBtn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/exploreSettingsSel.png"))); // NOI18N
            settingsBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    settingsBtnActionPerformed(evt);
                }
            });
            toolbarEast.add(settingsBtn);

            closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/close.png"))); // NOI18N
            closeBtn.setText("Close");
            closeBtn.setContentAreaFilled(false);
            closeBtn.setFocusable(false);
            closeBtn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/selected_close.png"))); // NOI18N
            closeBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
            closeBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    closeBtnActionPerformed(evt);
                }
            });
            toolbarEast.add(closeBtn);

            bar.add(toolbarEast, java.awt.BorderLayout.EAST);

            toolbarWest.setBorder(null);
            toolbarWest.setFloatable(false);
            toolbarWest.setRollover(true);
            toolbarWest.setBorderPainted(false);
            toolbarWest.add(jSeparator1);

            snapscreenBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/snap.png"))); // NOI18N
            snapscreenBtn.setText("Snap Screen  ");
            snapscreenBtn.setAlignmentX(0.2F);
            snapscreenBtn.setContentAreaFilled(false);
            snapscreenBtn.setFocusPainted(false);
            snapscreenBtn.setFocusable(false);
            snapscreenBtn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/selected_snap.png"))); // NOI18N
            snapscreenBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
            snapscreenBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    snapscreenBtnActionPerformed(evt);
                }
            });
            toolbarWest.add(snapscreenBtn);
            toolbarWest.add(jSeparator4);

            cropscreenBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/crop.png"))); // NOI18N
            cropscreenBtn.setText("Crop Screen  ");
            cropscreenBtn.setAlignmentX(0.2F);
            cropscreenBtn.setContentAreaFilled(false);
            cropscreenBtn.setFocusPainted(false);
            cropscreenBtn.setFocusable(false);
            cropscreenBtn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/selected_crop.png"))); // NOI18N
            cropscreenBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
            cropscreenBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cropscreenBtnActionPerformed(evt);
                }
            });
            toolbarWest.add(cropscreenBtn);
            toolbarWest.add(jSeparator2);

            screenshotsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/iedit.png"))); // NOI18N
            screenshotsBtn.setText("Screen Shots  ");
            screenshotsBtn.setAlignmentX(0.2F);
            screenshotsBtn.setContentAreaFilled(false);
            screenshotsBtn.setFocusPainted(false);
            screenshotsBtn.setFocusable(false);
            screenshotsBtn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/selected_iedit.png"))); // NOI18N
            screenshotsBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
            screenshotsBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    screenshotsBtnActionPerformed(evt);
                }
            });
            toolbarWest.add(screenshotsBtn);
            toolbarWest.add(jSeparator8);

            recordBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/record - Off.png"))); // NOI18N
            recordBtn.setText("Record");
            recordBtn.setToolTipText("Toggle Recording");
            recordBtn.setAlignmentX(0.2F);
            recordBtn.setContentAreaFilled(false);
            recordBtn.setFocusable(false);
            recordBtn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/record -On.png"))); // NOI18N
            recordBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
            recordBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    recordBtnActionPerformed(evt);
                }
            });
            toolbarWest.add(recordBtn);
            toolbarWest.add(jSeparator5);

            teststepsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/testedit.png"))); // NOI18N
            teststepsBtn.setText("Test Steps  ");
            teststepsBtn.setAlignmentX(0.2F);
            teststepsBtn.setContentAreaFilled(false);
            teststepsBtn.setFocusable(false);
            teststepsBtn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/selected_testedit.png"))); // NOI18N
            teststepsBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
            teststepsBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    teststepsBtnActionPerformed(evt);
                }
            });
            toolbarWest.add(teststepsBtn);
            toolbarWest.add(jSeparator3);

            exportBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/export.png"))); // NOI18N
            exportBtn.setText("Export  ");
            exportBtn.setAlignmentX(0.2F);
            exportBtn.setContentAreaFilled(false);
            exportBtn.setFocusable(false);
            exportBtn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/selected_export.png"))); // NOI18N
            exportBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
            exportBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    exportBtnActionPerformed(evt);
                }
            });
            toolbarWest.add(exportBtn);
            toolbarWest.add(jSeparator6);

            bugBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/bug.png"))); // NOI18N
            bugBtn.setText("Report Bug  ");
            bugBtn.setAlignmentX(0.2F);
            bugBtn.setContentAreaFilled(false);
            bugBtn.setFocusPainted(false);
            bugBtn.setFocusable(false);
            bugBtn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/explorer/selected_bug.png"))); // NOI18N
            bugBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
            bugBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bugBtnActionPerformed(evt);
                }
            });
            toolbarWest.add(bugBtn);
            toolbarWest.add(jSeparator7);

            bar.add(toolbarWest, java.awt.BorderLayout.WEST);

            getContentPane().add(bar, java.awt.BorderLayout.CENTER);

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void cropscreenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cropscreenBtnActionPerformed

        if (!cropscreenBtn.isSelected()) {
            selected.setSelected(false);
            selected = cropscreenBtn;
            controller.cropScreen();
        }
        cropscreenBtn.setSelected(!cropscreenBtn.isSelected());


    }//GEN-LAST:event_cropscreenBtnActionPerformed

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
        controller.doneCrop(evt);
    }//GEN-LAST:event_doneActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        controller.saveCropped(evt);

    }//GEN-LAST:event_addBtnActionPerformed

    private void snapscreenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snapscreenBtnActionPerformed

        selected.setSelected(false);
        selected = snapscreenBtn;
        controller.saveScreen(evt);

    }//GEN-LAST:event_snapscreenBtnActionPerformed

    private void screenshotsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_screenshotsBtnActionPerformed

        if (!screenshotsBtn.isSelected()) {
            selected.setSelected(false);
            selected = screenshotsBtn;
            selected.setSelected(true);
            controller.showGallery(evt);
        } else {
            selected.setSelected(false);
        }
    }//GEN-LAST:event_screenshotsBtnActionPerformed

    private void teststepsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teststepsBtnActionPerformed
        if (!teststepsBtn.isSelected()) {
            selected.setSelected(false);
            selected = teststepsBtn;
            controller.showStepEdtor(evt);
        }
        teststepsBtn.setSelected(!teststepsBtn.isSelected());
    }//GEN-LAST:event_teststepsBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        closeExplorer();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void bugBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bugBtnActionPerformed
        // ReportDefect
        if (!bugBtn.isSelected()) {
            selected.setSelected(false);
            selected = bugBtn;
            controller.showDefectReporter(evt);
        }
        bugBtn.setSelected(!bugBtn.isSelected());

    }//GEN-LAST:event_bugBtnActionPerformed

    private void settingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsBtnActionPerformed
        selected.setSelected(false);
        controller.launchSettings();
    }//GEN-LAST:event_settingsBtnActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
        if (!exportBtn.isSelected()) {
            selected.setSelected(false);
            selected = exportBtn;
            controller.showScriptExporter(evt);
        }
        exportBtn.setSelected(false);
    }//GEN-LAST:event_exportBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        closeExplorer();
    }//GEN-LAST:event_formWindowClosing

    private void recordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordBtnActionPerformed
        recordBtn.setSelected(!recordBtn.isSelected());

    }//GEN-LAST:event_recordBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JPanel bar;
    private javax.swing.JButton bugBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton cropscreenBtn;
    private javax.swing.JButton done;
    private javax.swing.JButton exportBtn;
    private javax.swing.JButton jButton8;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JButton recordBtn;
    private javax.swing.JButton screenshotsBtn;
    private javax.swing.JButton settingsBtn;
    private javax.swing.JButton snapscreenBtn;
    private javax.swing.JButton teststepsBtn;
    private javax.swing.JToolBar toolbarEast;
    private javax.swing.JToolBar toolbarWest;
    // End of variables declaration//GEN-END:variables

}
