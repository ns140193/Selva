/*
 * Copyright 2014 - 2017 Cognizant Technology Solutions
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.cognizant.cognizantits.ide.main.mainui.components.testdesign.tree;

import com.cognizant.cognizantits.datalib.model.Tag;
import com.cognizant.cognizantits.ide.util.jslist.JSList;
import java.util.List;
import java.util.function.Consumer;
import java.util.function.Function;
import javax.swing.JFrame;

/**
 *
 * 
 */
public class TagEditorDialog extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     *
     * @param parent
     * @param model
     * @param modal
     */
    JSList<Tag> jslist;

    public TagEditorDialog(JFrame parent, boolean modal, List<Tag> model, Function<String, Tag> onAdd) {
        super(parent, modal);
        initComponents();
        jslist = new JSList(model, t -> ((Tag) t).getValue(), onAdd);
        panel.add(jslist);
    }
    public void show(Consumer<List<Tag>> onsel) {
        setOnSelection(onsel);
        setVisible(true);
    }

    public static TagEditorDialog build(JFrame parent, List<Tag> model, 
            List<Tag> selected, Consumer<Tag> onRemove, Function<String, Tag> onAdd) {
        TagEditorDialog dialog = new TagEditorDialog(parent, true, model, onAdd);
        dialog.jslist.withOnRemove(onRemove);
        dialog.jslist.setSelected(selected);
        dialog.setLocationRelativeTo(parent); 
        return dialog;
    }

    private void setOnSelection(Consumer<List<Tag>> onsel) {
        jslist.setOnSelect(onsel);
    }

    public TagEditorDialog withTitle(String title) {
        setTitle(title);
        return this;
    }

    public List<Tag> getSelected() {
        return jslist.getSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Tag");
        setResizable(false);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 373, Short.MAX_VALUE)
        );

        getContentPane().add(panel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
